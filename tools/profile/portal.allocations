#!/bin/bash

if ! [ -x "$(command -v iperf3)" ]; then
  echo 'Error: iperf3 is not installed.' >&2
  exit 1
fi

if [ "$(uname)" == "Darwin" ]; then
  if ! [ -x "$(command -v xctrace)" ]; then
    echo 'Error: xctrace is not installed.' >&2
    exit 1
  fi
else
  if ! [ -x "$(command -v valgrind)" ]; then
    echo 'Error: valgrind is not installed.' >&2
    exit 1
  fi
fi


set -e

if [ -z "${OCKAM}" ]; then
  RUSTFLAGS="-C force-frame-pointers=yes" cargo build --profile profiling -p ockam_command  -F ockam_vault/aws-lc
  OCKAM=target/profiling/ockam
fi

"${OCKAM}" node delete portal -y >/dev/null 2>&1 || true
export OCKAM_LOG_LEVEL=info
export OCKAM_TELEMETRY_EXPORT=0

if [ "$(uname)" == "Darwin" ]; then
  rm -rf /tmp/ockam.trace/
  xctrace record --template 'Allocations' --output /tmp/ockam.trace --launch -- "${OCKAM}" node create portal
else
  valgrind --tool=dhat --trace-children=yes --dhat-out-file=/tmp/ockam.valgrind.dhat -- "${OCKAM}" node create portal
fi


sleep 1
"${OCKAM}" tcp-outlet create --to 5500 --at portal
"${OCKAM}" tcp-inlet create --from 8200 --to /secure/api/service/outlet --at portal

iperf3 --server --port 5500 --one-off &
iperf3_server_pid=$!

sleep 0.3 # wait for server to start
iperf3 --zerocopy --client 127.0.0.1 --port 8200 --time 60

kill ${iperf3_server_pid}
"${OCKAM}" node delete portal -y

if [ "$(uname)" == "Darwin" ]; then
  echo "Waiting for xctrace to finish writing /tmp/ockam.trace..."
  wait
  echo "You can use XCode Instruments to open /tmp/ockam.trace"
else
  echo "Waiting for valgrind to finish writing /tmp/ockam.valgrind.dhat..."
  wait

  echo "To read the outcome, open the ``dh_view.html`` with a broweser and load the file /tmp/ockam.valgrind.dhat"
fi
